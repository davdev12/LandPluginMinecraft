import de.example.landsystem.Land;
import de.example.landsystem.Main;
import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Particle;
import org.bukkit.entity.Player;
import org.bukkit.scheduler.BukkitRunnable;

public class OldLandParticleBorderTask extends BukkitRunnable {

    private final Main plugin;

    public LandParticleBorderTask(Main plugin) {
        this.plugin = plugin;
    }

    @Override
    public void run() {
        for (Land land : plugin.getLandManager().getAllLands().values()) {
            Location pos1 = land.getPos1();
            Location pos2 = land.getPos2();

            if (pos1 == null || pos2 == null) continue;

            int minX = Math.min(pos1.getBlockX(), pos2.getBlockX());
            int maxX = Math.max(pos1.getBlockX(), pos2.getBlockX());
            int minZ = Math.min(pos1.getBlockZ(), pos2.getBlockZ());
            int maxZ = Math.max(pos1.getBlockZ(), pos2.getBlockZ());
            int y = pos1.getBlockY(); // Du kannst auch Y fix setzen, z.B. auf 70

            // Partikel entlang der vier Kanten anzeigen
            for (int x = minX; x <= maxX; x++) {
                spawnParticleAt(x, y, minZ, land);
                spawnParticleAt(x, y, maxZ, land);
            }
            for (int z = minZ; z <= maxZ; z++) {
                spawnParticleAt(minX, y, z, land);
                spawnParticleAt(maxX, y, z, land);
            }
        }
    }

    private void spawnParticleAt(int x, int y, int z, Land land) {
        Location location = new Location(
                Bukkit.getWorld("world"), // oder land.getCenter().getWorld()
                x + 0.5, y + 1.0, z + 0.5
        );
        for (Player player : Bukkit.getOnlinePlayers()) {
            player.spawnParticle(
                    Particle.COMPOSTER,
                    location,
                    1,
                    0, 0, 0,
                    0
            );
        }
    }
}
